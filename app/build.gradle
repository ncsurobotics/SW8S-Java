/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // Support for generating project metadata
    id 'eclipse'
    id 'org.hidetake.ssh' version '2.10.1'
}

mainClassName = "org.aquapackrobotics.sw8s.App"

java {
    // Set Java version to 11
    // https://docs.gradle.org/current/userguide/toolchains.html
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

run {
    standardInput = System.in
}

jar {
    manifest {
        attributes(
            'Main-Class': "$mainClassName"
        )
    }
}

task fatJar(type: Jar) {
    dependsOn build
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

remotes {
    orangePi {
        host = '192.168.2.5'
        user = 'sw8'
        identity = file('.sw8_ssh_identity')
        password = file('.sw8_password').getText('UTF-8').trim()
    }
}

task deploy {
    dependsOn fatJar
    doLast {
        ssh.run {
            session(remotes.orangePi) {
                execute "sudo -S mount -o remount,rw /", inputStream: remotes.orangePi.password
                put from: "$buildDir/libs/app-all.jar", into: 'app-all.jar'
                execute "sudo -S mount -o remount,ro /", inputStream: remotes.orangePi.password
            }
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

def cv_win = 'C:/opencv-4.6.0/java/opencv-460.jar'
def cv_lin = '/opt/opencv-4.6.0/share/java/opencv4/opencv-460.jar'

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'

     if(System.properties['os.name'].toLowerCase().contains('win')){
        implementation files(cv_win)
    }else{
        implementation files(cv_lin)
    }
}

application {
    // Define the main class for the application.
    mainClass = mainClassName
}
